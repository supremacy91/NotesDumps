создаем кастомный аттрибут с типом multiple_select

<?php

namespace Heb\WaystoshopFilter\Setup;

use Magento\Eav\Setup\EavSetup;
use Magento\Eav\Setup\EavSetupFactory;
use Magento\Framework\Setup\InstallDataInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\Setup\ModuleDataSetupInterface;

class InstallData implements InstallDataInterface
{
    private $eavSetupFactory;

    public function __construct(EavSetupFactory $eavSetupFactory)
    {
        $this->eavSetupFactory = $eavSetupFactory;
    }

    public function install(ModuleDataSetupInterface $setup, ModuleContextInterface $context)
    {
        $eavSetup = $this->eavSetupFactory->create(['setup' => $setup]);
        $eavSetup->addAttribute(
            \Magento\Catalog\Model\Product::ENTITY,
            'heb_ways_to_shop',
            [
                'group' => 'Product Details',/* Group name in which you want to display your custom attribute */
                'type' => 'text',/* Data type in which formate your value save in database*/
                'attribute_set' =>  'Default',
                'backend' => 'Magento\Eav\Model\Entity\Attribute\Backend\ArrayBackend' : если не указать, то значения через админку сохраняться небудут
                'frontend' => '',
                'label' => 'Heb Ways To Shop',
                'input' => 'multiselect',
                'class' => '',
                'global' => \Magento\Eav\Model\Entity\Attribute\ScopedAttributeInterface::SCOPE_STORE,
                'visible' => true,
                'required' => false,
                'user_defined' => true,
                'default' => '',
                'searchable' => true,
                'filterable' => true,
                'comparable' => false,
                'visible_on_front' => true,
                'used_in_product_listing' => true,
                'unique' => false,
                'visible_in_advanced_search' => false,
                'filterable_in_search' => false ,
                'option' => array('values' => array("1", "2","3","4","5","6"))
            ]
        );
    }

}


\Magento\Catalog\Model\ResourceModel\Eav\Attribute\Interceptor - обьект EAV аттрибута, который хранит значения из таблиц eav_attribute + catalog_eav_attribute
На обьекте этого класса можно, например, вызывать метод getIsFilterable() для доступа к полю is_filterable

------------------------------------------------------------------------------------------------------------------------------------------------

Добавление аттрибутов select и YesNoCheckbox в категории

The category UI Component is rendered with configuration from the category_form.xml file. All files with that name are merged together. As a result, you can add a field by creating a category_form.xml file in the view/adminhtml/ui_component directory in your module.

UI Component для категорий рендерится конфигурацией из файла category_form.xml(vendor/magento/module-catalog/view/adminhtml/ui_component/category_form.xml). Все файлы с этим именем мерджатся в один. Как результат, мы можем добавить новое поле через создание своего файла category_form.xml в директории нашего модуля (view/adminhtml/ui_component)


1) app/code/Supreme/DisplayOrder/Setup/InstallData.php
<?php

namespace Supreme\DisplayOrder\Setup;

use Magento\Eav\Setup\EavSetup;
use Magento\Eav\Setup\EavSetupFactory;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\Setup\ModuleDataSetupInterface;
use Magento\Framework\Setup\InstallDataInterface;

class InstallData implements InstallDataInterface
{
    private $eavSetupFactory;

    public function __construct(EavSetupFactory $eavSetupFactory) {
        $this->eavSetupFactory = $eavSetupFactory;
    }

    public function install(ModuleDataSetupInterface $setup, ModuleContextInterface $context)
    {
        $eavSetup = $this->eavSetupFactory->create(['setup' => $setup]);
        $eavSetup->addAttribute(\Magento\Catalog\Model\Category::ENTITY, 'select_the_type', [
            'type'     => 'int',
            'label' => 'Custom attribute',
            'input' => 'select',
            //'source'   => 'Supreme\DisplayOrder\Model\CategoryLanding\Type',
            'visible'  => true,
            'default'  => '0',
            'required' => false,
            'sort_order' => 100,
            'global'   => \Magento\Eav\Model\Entity\Attribute\ScopedAttributeInterface::SCOPE_STORE,
//            'group'    => 'Category Landing',
        ]);

        $eavSetup->addAttribute(\Magento\Catalog\Model\Category::ENTITY, 'custom_attribute_yesno', [
            'type'     => 'int',
            'label' => 'Custom attribute',
            'input' => 'select',
            //'source'   => 'Supreme\DisplayOrder\Model\CategoryLanding\Type',
            'visible'  => true,
            'default'  => '0',
            'required' => false,
            'sort_order' => 100,
            'global'   => \Magento\Eav\Model\Entity\Attribute\ScopedAttributeInterface::SCOPE_STORE,
//            'group'    => 'Category Landing',
        ]);


    }
}

2)app/code/Supreme/DisplayOrder/Model/CategoryLanding/Type.php
<?php
namespace Supreme\DisplayOrder\Model\CategoryLanding;

class Type extends \Magento\Eav\Model\Entity\Attribute\Source\AbstractSource
{
   
    public function getAllOptions()
    {
        if (!$this->_options) {
            $this->_options = [
                ['value' => 1, 'label' => __('1 Item Display')],
                ['value' => 2, 'label' => __('2 Items Display')],
                ['value' => 3, 'label' => __('3 Items Display')],
                ['value' => 4, 'label' => __('4 Items Display')],
                ['value' => 5, 'label' => __('5 Items Display')],
                ['value' => 6, 'label' => __('6 Items Display')],
                ['value' => 7, 'label' => __('7 Items Display')],
            ];
        }
        return $this->_options;
    }
}

3)app/code/Supreme/DisplayOrder/view/adminhtml/ui_component/category_form.xml
<?xml version="1.0" encoding="UTF-8"?>
<!-- file: app/code/Atwix/CategoryAttribute/view/adminhtml/ui_component/category_form.xml -->

<form xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Ui:etc/ui_configuration.xsd">
    <fieldset name="frontend_display_type_settings">
        <argument name="data" xsi:type="array">
            <item name="config" xsi:type="array">
                <item name="label" xsi:type="string" translate="true">Category Landing</item>
                <item name="collapsible" xsi:type="boolean">true</item>
                <item name="sortOrder" xsi:type="number">100</item>
            </item>
        </argument>
        <field name="custom_attribute_yesno" sortOrder="10" formElement="checkbox">
            <argument name="data" xsi:type="array">
                <item name="config" xsi:type="array">
                    <item name="default" xsi:type="number">1</item>
                </item>
            </argument>
            <settings>
                <dataType>boolean</dataType>
                <label translate="true">Enable Selection Type Mode</label>
            </settings>
            <formElements>
                <checkbox>
                    <settings>
                        <valueMap>
                            <map name="false" xsi:type="string">0</map>
                            <map name="true" xsi:type="string">1</map>
                        </valueMap>
                        <prefer>toggle</prefer>
                    </settings>
                </checkbox>
            </formElements>
        </field>
        <field name="select_the_type" sortOrder="90" formElement="select">
            <argument name="data" xsi:type="array">
                <item name="options" xsi:type="object">Supreme\DisplayOrder\Model\CategoryLanding\Type</item>
                <!--<item name="options" xsi:type="object">Magento\Catalog\Model\Category\Attribute\Source\Page</item>-->
                <item name="config" xsi:type="array">
                    <!--<item name="class" xsi:type="string">Magento\Ui\Component\Form\Element\Select</item>-->
                    <item name="sortOrder" xsi:type="number">10</item>
                    <!--<item name="dataType" xsi:type="string">string</item>-->
                    <item name="formElement" xsi:type="string">select</item>
                    <item name="label" xsi:type="string" translate="true">Display Type</item>
                    <item name="required" xsi:type="boolean">false</item>

                </item>
            </argument>
        </field>

    </fieldset>

</form>





