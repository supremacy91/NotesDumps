

Mage::dispatchEvent('core_layout_block_create_after', array('block'=>$block)); в методе Mage_Core_Model_Layout -> createBlock()
 
Mage_Core_Block_Abstract::
public function setLayout(Mage_Core_Model_Layout $layout)
    {
        $this->_layout = $layout;
        Mage::dispatchEvent('core_block_abstract_prepare_layout_before', array('block' => $this));
        $this->_prepareLayout();
        Mage::dispatchEvent('core_block_abstract_prepare_layout_after', array('block' => $this));
        return $this;
    }

------------------------------------------------------------------------------------------------------------------------

There are two events that are fired around block rendering that can be used to modify the block before and after rendering the HTML:
    core_block_abstract_to_html_before
    core_block_abstract_to_html_after

------------------------------------------------------------------------------------------------------------------------

Mage_Core_Model_Abstract

$_eventPrefix = 'core_abstract';
	
 protected function _beforeLoad($id, $field = null)
Mage::dispatchEvent('model_load_before', $params);
Mage::dispatchEvent($this->_eventPrefix.'_load_before', $params);

  protected function _afterLoad()
Mage::dispatchEvent('model_load_after', array('object'=>$this));
Mage::dispatchEvent($this->_eventPrefix.'_load_after', $this->_getEventData());

 protected function _beforeSave()
Mage::dispatchEvent('model_save_before', array('object'=>$this));
Mage::dispatchEvent($this->_eventPrefix.'_save_before', $this->_getEventData());
 
 protected function _afterSave()
Mage::dispatchEvent('model_save_after', array('object'=>$this));
Mage::dispatchEvent($this->_eventPrefix.'_save_after', $this->_getEventData());

 protected function _beforeDelete()
Mage::dispatchEvent('model_delete_before', array('object'=>$this));
Mage::dispatchEvent($this->_eventPrefix.'_delete_before', $this->_getEventData());

 protected function _afterDelete()
Mage::dispatchEvent('model_delete_after', array('object'=>$this));
Mage::dispatchEvent($this->_eventPrefix.'_delete_after', $this->_getEventData());
